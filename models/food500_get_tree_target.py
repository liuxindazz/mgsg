import numpy as np
import torch
import torch.nn as nn


trees = [[1, 562, 501],
[2, 562, 502],
[3, 562, 502],
[4, 569, 503],
[5, 563, 504],
[6, 563, 505],
[7, 562, 506],
[8, 561, 507],
[9, 562, 501],
[10, 563, 508],
[11, 561, 509],
[12, 563, 510],
[13, 563, 511],
[14, 563, 511],
[15, 563, 511],
[16, 563, 511],
[17, 563, 511],
[18, 563, 511],
[19, 563, 511],
[20, 562, 512],
[21, 562, 513],
[22, 562, 514],
[23, 561, 515],
[24, 563, 516],
[25, 563, 516],
[26, 563, 516],
[27, 563, 516],
[28, 569, 517],
[29, 563, 508],
[30, 563, 508],
[31, 563, 508],
[32, 562, 518],
[33, 563, 519],
[34, 563, 519],
[35, 563, 519],
[36, 563, 519],
[37, 562, 512],
[38, 563, 520],
[39, 563, 521],
[40, 563, 521],
[41, 563, 521],
[42, 563, 521],
[43, 563, 521],
[44, 562, 518],
[45, 562, 522],
[46, 563, 510],
[47, 563, 510],
[48, 563, 510],
[49, 563, 520],
[50, 563, 520],
[51, 563, 523],
[52, 561, 509],
[53, 561, 509],
[54, 563, 523],
[55, 563, 524],
[56, 562, 513],
[57, 562, 513],
[58, 562, 513],
[59, 562, 514],
[60, 563, 523],
[61, 563, 523],
[62, 563, 523],
[63, 561, 507],
[64, 563, 505],
[65, 563, 519],
[66, 561, 507],
[67, 563, 523],
[68, 562, 527],
[69, 563, 508],
[70, 562, 528],
[71, 562, 501],
[72, 562, 522],
[73, 561, 515],
[74, 563, 508],
[75, 562, 529],
[76, 562, 512],
[77, 563, 508],
[78, 569, 530],
[79, 563, 508],
[80, 563, 520],
[81, 563, 524],
[82, 562, 518],
[83, 562, 518],
[84, 562, 518],
[85, 569, 531],
[86, 562, 518],
[87, 562, 518],
[88, 563, 532],
[89, 569, 503],
[90, 569, 503],
[91, 569, 503],
[92, 563, 534],
[93, 562, 512],
[94, 563, 535],
[95, 562, 514],
[96, 562, 506],
[97, 562, 512],
[98, 562, 536],
[99, 563, 537],
[100, 563, 537],
[101, 563, 537],
[102, 563, 537],
[103, 563, 537],
[104, 563, 537],
[105, 563, 537],
[106, 562, 522],
[107, 561, 538],
[108, 562, 536],
[109, 563, 524],
[110, 561, 539],
[111, 561, 509],
[112, 561, 509],
[113, 562, 513],
[114, 562, 513],
[115, 562, 513],
[116, 562, 513],
[117, 562, 501],
[118, 563, 504],
[119, 563, 504],
[120, 563, 504],
[121, 563, 525],
[122, 563, 525],
[123, 563, 525],
[124, 563, 508],
[125, 563, 508],
[126, 563, 508],
[127, 563, 508],
[128, 563, 508],
[129, 563, 508],
[130, 561, 509],
[131, 563, 508],
[132, 563, 508],
[133, 563, 508],
[134, 563, 508],
[135, 566, 540],
[136, 563, 520],
[137, 563, 526],
[138, 563, 508],
[139, 562, 541],
[140, 563, 542],
[141, 563, 542],
[142, 563, 543],
[143, 563, 505],
[144, 563, 524],
[145, 563, 524],
[146, 563, 524],
[147, 563, 543],
[148, 562, 513],
[149, 563, 519],
[150, 561, 507],
[151, 563, 510],
[152, 563, 510],
[153, 562, 533],
[154, 563, 523],
[155, 563, 535],
[156, 563, 534],
[157, 562, 512],
[158, 562, 513],
[159, 562, 513],
[160, 561, 539],
[161, 561, 539],
[162, 561, 539],
[163, 561, 539],
[164, 561, 539],
[165, 561, 539],
[166, 563, 523],
[167, 563, 526],
[168, 563, 526],
[169, 563, 526],
[170, 563, 526],
[171, 563, 526],
[172, 562, 512],
[173, 561, 545],
[174, 563, 510],
[175, 563, 510],
[176, 563, 532],
[177, 562, 536],
[178, 561, 507],
[179, 562, 512],
[180, 561, 515],
[181, 561, 515],
[182, 561, 515],
[183, 561, 515],
[184, 562, 522],
[185, 561, 509],
[186, 562, 527],
[187, 563, 547],
[188, 563, 547],
[189, 563, 520],
[190, 563, 548],
[191, 563, 548],
[192, 563, 548],
[193, 563, 508],
[194, 569, 503],
[195, 562, 501],
[196, 563, 508],
[197, 562, 533],
[198, 561, 509],
[199, 562, 502],
[200, 563, 548],
[201, 562, 518],
[202, 563, 510],
[203, 563, 521],
[204, 563, 523],
[205, 561, 515],
[206, 561, 515],
[207, 561, 515],
[208, 561, 515],
[209, 561, 515],
[210, 561, 515],
[211, 561, 515],
[212, 563, 504],
[213, 563, 547],
[214, 563, 524],
[215, 561, 538],
[216, 569, 517],
[217, 566, 540],
[218, 563, 548],
[219, 563, 504],
[220, 563, 508],
[221, 561, 509],
[222, 561, 538],
[223, 562, 513],
[224, 569, 503],
[225, 563, 549],
[226, 563, 523],
[227, 562, 518],
[228, 569, 517],
[229, 563, 526],
[230, 563, 523],
[231, 563, 534],
[232, 563, 534],
[233, 562, 536],
[234, 562, 512],
[235, 562, 512],
[236, 562, 512],
[237, 561, 539],
[238, 563, 508],
[239, 563, 523],
[240, 561, 509],
[241, 562, 513],
[242, 562, 513],
[243, 563, 547],
[244, 562, 518],
[245, 562, 518],
[246, 562, 533],
[247, 569, 503],
[248, 561, 509],
[249, 562, 518],
[250, 562, 513],
[251, 562, 528],
[252, 563, 524],
[253, 569, 531],
[254, 563, 520],
[255, 561, 515],
[256, 561, 515],
[257, 562, 512],
[258, 569, 530],
[259, 563, 550],
[260, 562, 513],
[261, 562, 518],
[262, 561, 509],
[263, 563, 511],
[264, 562, 513],
[265, 563, 524],
[266, 563, 551],
[267, 562, 518],
[268, 562, 513],
[269, 563, 546],
[270, 562, 513],
[271, 561, 507],
[272, 562, 501],
[273, 563, 508],
[274, 563, 508],
[275, 561, 509],
[276, 563, 551],
[277, 561, 509],
[278, 563, 546],
[279, 563, 548],
[280, 563, 542],
[281, 562, 512],
[282, 563, 549],
[283, 563, 549],
[284, 563, 549],
[285, 563, 549],
[286, 563, 549],
[287, 563, 520],
[288, 562, 512],
[289, 562, 512],
[290, 562, 533],
[291, 561, 515],
[292, 563, 505],
[293, 563, 552],
[294, 561, 507],
[295, 569, 503],
[296, 563, 523],
[297, 561, 509],
[298, 561, 509],
[299, 563, 504],
[300, 563, 523],
[301, 561, 509],
[302, 561, 509],
[303, 561, 509],
[304, 561, 509],
[305, 561, 509],
[306, 561, 509],
[307, 561, 509],
[308, 561, 509],
[309, 561, 509],
[310, 561, 509],
[311, 561, 509],
[312, 561, 509],
[313, 561, 509],
[314, 561, 509],
[315, 569, 531],
[316, 561, 509],
[317, 562, 513],
[318, 562, 513],
[319, 563, 510],
[320, 562, 501],
[321, 561, 509],
[322, 563, 510],
[323, 561, 509],
[324, 562, 522],
[325, 562, 513],
[326, 561, 538],
[327, 563, 508],
[328, 562, 514],
[329, 562, 514],
[330, 562, 514],
[331, 562, 513],
[332, 563, 524],
[333, 569, 530],
[334, 569, 530],
[335, 563, 523],
[336, 562, 554],
[337, 562, 554],
[338, 562, 554],
[339, 561, 515],
[340, 563, 523],
[341, 563, 552],
[342, 563, 552],
[343, 562, 527],
[344, 563, 520],
[345, 561, 509],
[346, 562, 512],
[347, 562, 518],
[348, 562, 518],
[349, 562, 518],
[350, 563, 555],
[351, 563, 523],
[352, 562, 518],
[353, 569, 530],
[354, 562, 514],
[355, 562, 556],
[356, 563, 555],
[357, 563, 524],
[358, 562, 518],
[359, 562, 518],
[360, 562, 518],
[361, 562, 518],
[362, 562, 518],
[363, 562, 518],
[364, 562, 518],
[365, 562, 518],
[366, 562, 518],
[367, 562, 506],
[368, 563, 504],
[369, 562, 533],
[370, 562, 533],
[371, 563, 505],
[372, 563, 555],
[373, 561, 539],
[374, 562, 518],
[375, 562, 557],
[376, 562, 557],
[377, 569, 531],
[378, 563, 504],
[379, 563, 519],
[380, 563, 546],
[381, 569, 558],
[382, 561, 509],
[383, 563, 520],
[384, 563, 520],
[385, 563, 520],
[386, 563, 534],
[387, 563, 520],
[388, 563, 523],
[389, 562, 513],
[390, 562, 513],
[391, 562, 513],
[392, 562, 513],
[393, 563, 546],
[394, 563, 546],
[395, 563, 519],
[396, 561, 515],
[397, 563, 520],
[398, 563, 508],
[399, 563, 524],
[400, 569, 503],
[401, 562, 501],
[402, 562, 536],
[403, 566, 540],
[404, 562, 522],
[405, 562, 522],
[406, 562, 522],
[407, 562, 522],
[408, 561, 545],
[409, 562, 533],
[410, 562, 518],
[411, 562, 514],
[412, 562, 514],
[413, 563, 508],
[414, 563, 549],
[415, 561, 509],
[416, 563, 526],
[417, 563, 546],
[418, 562, 533],
[419, 569, 517],
[420, 566, 540],
[421, 562, 512],
[422, 561, 515],
[423, 561, 515],
[424, 563, 559],
[425, 562, 501],
[426, 563, 560],
[427, 562, 536],
[428, 562, 513],
[429, 561, 509],
[430, 563, 523],
[431, 562, 512],
[432, 562, 512],
[433, 562, 557],
[434, 563, 523],
[435, 563, 543],
[436, 563, 523],
[437, 562, 513],
[438, 566, 540],
[439, 569, 503],
[440, 563, 544],
[441, 562, 541],
[442, 562, 541],
[443, 562, 541],
[444, 562, 541],
[445, 562, 541],
[446, 562, 541],
[447, 562, 541],
[448, 563, 516],
[449, 563, 548],
[450, 561, 545],
[451, 562, 512],
[452, 569, 530],
[453, 562, 556],
[454, 561, 539],
[455, 562, 518],
[456, 563, 523],
[457, 562, 506],
[458, 562, 513],
[459, 563, 504],
[460, 562, 512],
[461, 566, 540],
[462, 563, 523],
[463, 562, 514],
[464, 562, 518],
[465, 566, 540],
[466, 563, 535],
[467, 562, 522],
[468, 562, 501],
[469, 563, 544],
[470, 569, 530],
[471, 569, 530],
[472, 569, 530],
[473, 562, 518],
[474, 561, 509],
[475, 563, 505],
[476, 569, 531],
[477, 563, 523],
[478, 562, 501],
[479, 561, 515],
[480, 561, 515],
[481, 562, 512],
[482, 563, 553],
[483, 562, 501],
[484, 562, 512],
[485, 562, 506],
[486, 562, 518],
[487, 563, 523],
[488, 562, 501],
[489, 563, 508],
[490, 562, 533],
[491, 563, 508],
[492, 563, 508],
[493, 561, 509],
[494, 561, 539],
[495, 562, 513],
[496, 563, 524],
[497, 562, 518],
[498, 561, 509],
[499, 562, 513],
[500, 566, 540]]



# addnum = np.asarray([0, 200, 316, 339])

# t = np.asarray(trees)+addnum


# print(t.tolist())

def get_label_list(targets):

    label_list = []
    # print(targets)
    for i in range(targets.size(0)):
        if trees[targets[i]][0] is not -1:
            # print(trees[targets[i]])
            # print('*****',targets[7])
            # print('-----',trees[targets[7]])
            # print(i, trees[targets[i]])
            last = trees[targets[i]].pop(0)
            trees[targets[i]].append(last)
            # print(trees[targets[i]])
            trees[targets[i]].insert(0, -1)
            trees[targets[i]].append(0)
            # print(trees[targets[i]])
            label_list.append([k+1 for k in trees[targets[i]]])
        else:
            label_list.append([k+1 for k in trees[targets[i]]])

    # print(label_list)
    dec_list = [d[:-1] for d in label_list]
    t_list = [t[1:] for t in label_list]

    # print(dec_list)
    dec_list = torch.from_numpy(np.array(dec_list)).cuda()
    t_list = torch.from_numpy(np.array(t_list)).cuda()
    return dec_list, t_list

if __name__ == '__main__':
    targets = torch.tensor([ 22,  15, 176, 134, 131, 185,  54, 116], device='cuda:0')
    k,t = get_label_list(targets)
    print(k)
    print(t)


# P = np.asarray(trees)

# P[:, [1, 3]] = P[:, [3, 1]]
# # P[:, [1, 2]] = P[:, [2, 1]]
# print(P.tolist())